#pragma once                  
#include <windows.h>
#include <iostream>
#include <string.h>

#include "Point05_07.h" 	//объявление классов
#include "GetConlWin.h"		//указатель на консольное окно

//макрос для определения кода нажатой клавиши
#define KEY_DOWN(vk_code) ((GetAsyncKeyState(vk_code) & 0x8000) ? 1 : 0)
using namespace std;
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
/*            ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ И КОНСТАНТЫ                */
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/

//глобальная переменная видна в двух файлах: Point05_03.cpp и Ex05_03_Con.cpp
//первичное объявление глобальной переменной
//глобальная переменная действует от места объявления до конца файла
//, в котором объявлена

HDC hdc;	// Объявим контекст устройства
			// Контекст устройства по сути это структура,
			// содержащая описание видеокарты на вашем компьютере
			// и всех необходимых графических элементов

/*-------------------------------------------------------------*/
/*         П Р О Т О Т И П Ы    Ф У Н К Ц И Й                  */
/*-------------------------------------------------------------*/
//HWND GetConcolWindow(); //указатель на консольное окно теперь в  "GetConlWin.h"
//задержка экрана до нажатия клавиши
void PressKey(int VkCode);//код клавиши

bool Mode();//Выбор продолжения или завершения

Point* Choose(Cat* cat, Mouse* mouse, Point* p);//после того, как выбрали продолжение, выбираем объект, которыц мы будем двигать - мышку или кошку


/***************************************************************/
/*         О С Н О В Н А Я    П Р О Г Р А М М А                */
/***************************************************************/
int main()
{
	//объявление и инициализация переменных
	int x0 = 130, y0 = 250;		//стартовые координаты центра
	int Radius0 = 50;			//начальное значение радиуса
	/*
	int Radius0 = 50;			//начальное значение радиуса
	int DeltaRad = 30;		//начальное изменение радиуса
	int RingW0 = 20;		//начальное значение толщины кольца
	int DeltaWide0 = 10;	//начальное изменение толщины КОЛЬЦА
	*/
	//получим дескриптор консольного окна
	HWND hwnd = GetConcolWindow();

	//если дескриптор существует - можем работать
	if (hwnd != NULL)
	{
		//получим контекст устройства для консольного окна
		hdc = GetWindowDC(hwnd);

		//если контекст существует - можем работать
		if (hdc != 0)
		{
			Point* pPoint;           //указатель на базовый класс
			Cat c(x0 + 100, y0 + 100, "Musya", 0, "Myaw", 1);
			Ball b(x0, y0 + 160);
			Flower f(x0 + 500, y0);
			Mink m(30, 0);
			Mouse mouse(x0 + 540, y0 + 80, "Mikkey", 0, "Ццц");
			
			//динамический полиморфизм через указатель на базовый класс
			pPoint = &mouse;           

			//динамический полиморфизм через интерфейс
			IAnimal* pAnimal = 0;

			pAnimal = &mouse;


			//инициализируем указатель на базовый класс 
			//адресом экземпляра базового класса
			while (1)
			{
				//показать все объкты
				c.Show();
				b.Show();
				f.Show();
				m.Show();
				mouse.Show();


				if (Mode() == 0)//Хотите продолжить?
				{
					break;
				}
				else
				{
					pPoint = Choose(&c, &mouse, pPoint);  //Выбор объекта
					pPoint->Drag(20);//управление объектом с помощью стрелок, объект движется с шагом 20, до тех пор, пока не нажали "0"

					m.Show();
					c.Show();
					mouse.Show();
					b.Show();
					f.Show();

					//текущие координаты объекта
					int tX = pPoint->GetX();
					int tY = pPoint->GetY();

					if (pPoint == &c)//текущий объект - кот?
					{
						//-----КОТ НЮХАЕТ ЦВЕТОК---

						//положение цветка
						int flowerX = f.GetX();
						int flowerY = f.GetY();

						//кот и цветок находятся близко друг к другу?
						if ((tX >= flowerX + 20) && (tX <= flowerX + 60) && (tY <= flowerY + 80) && (tY >= flowerY + 60))
						{
							//цветок открыт?
							if (f.IsOpened() == 1)
							{
								//кот нюхает цветок
								c.Sniff();
							}
							//цветок или распускается, или закрывается
							f.Turn();
							Sleep(500);
						}

						//кот игривый?
						if (c.IsPlayful() == 1)
						{
							//----ИГРА С МЯЧИКОМ----

							//текущие координаты мячика
							int ballX = b.GetX();
							int ballY = b.GetY();

							//мяч с котом близко?
							if ((ballX >= tX - 80) && (ballX <= tX) && (ballY <= tY + 100) && (ballY >= tY + 20))
							{
								//кот играет
								c.Play();

								//текущие координаты мяча
								int tballX = ballX;
								int tballY = ballY;

								//пока мяч находится на нормальном расстоянии от края и он подвинулся до некоторого места?
								while ((tballX != ballX - 50) && (tballX > 50))
								{
									//двигать мяч

									b.Show();
									b.MoveTo(tballX - 5, tballY);//переместить мяч влево
									tballX = b.GetX();//установить его новые текущие координаты
									tballY = b.GetY();
									Sleep(50);
								}
								//мяч находится у края?
								if ((tballX <= 50) && (tballY > 150))
								{
									//переместить мяч выше(мяч подпрыгнул)
									b.MoveTo(tballX, tballY - 20);
								}
								//дошли до верхней точки?
								if ((tballX <= 50) && (tballY <= 150))
								{
									//возвратиться на начальное положение
									b.MoveTo(x0, y0 + 160);
								}
								Sleep(500);
							}//мячик близко
						}//кот игривый

					}//текущий объект - кот
					if (pPoint == &mouse)//ткущий объект - мышь?
					{
						//-----МЫШЬ-ЦВЕТОК----
						//мышка кушает цветок, если хочет есть, если не хочет - нюхает его(цветок закрывается)

						//текущие координаты цветка
						int flowerX = f.GetX();
						int flowerY = f.GetY();

						//цветок близкоо к коту?
						if ((tX >= flowerX) && (tX <= flowerX + 40) && (tY <= flowerY + 140) && (tY >= flowerY + 100))
						{
							//мышка сытая?
							if (mouse.isFed() == 1)
							{
								//раскрыть(закрыть) цветок
								f.Turn();
							}
							if (mouse.isFed() == 0)
							{
								//мышка его съела, и появляется "новый" цветок, на самом деле цветок двигается выше или возвращается в исходное положение
								if (flowerY > 100)
								{
									f.MoveTo(flowerX, flowerY - 100);
								}
								if (flowerY <= 100)
								{
									f.MoveTo(x0 + 500, y0);
								}

							}
							pAnimal = &mouse;
							//съесть цветок
							pAnimal->Eat();
							Sleep(500);
						}//мышка близка к цветку
					}//текущий объект - мышь

					m.Show();
					c.Show();
					mouse.Show();
					b.Show();
					f.Show();

					//-------ОХОТА------
					pAnimal = &c;//текущий объект - кот

					//координаты мышки, норки и кошки
					int mouseX = mouse.GetX();
					int mouseY = mouse.GetY();

					int catCurrX = c.GetX();
					int catCurrY = c.GetY();

					int minkX = m.GetX();
					int minkY = m.GetY();

					//запоминаем начальное положение кошки
					int catX = c.GetX();
					int catY = c.GetY();


					//кошка и мышь близко друг к другу?
					if ((mouseX >= catCurrX - 200) && (mouseX <= catCurrX + 20) && (mouseY <= catCurrY + 140) && (mouseY >= catCurrY - 60))
					{
						//если мышка не около норки
						if (!((mouseX < 50) && (mouseY < 90)))
						{
							do
							{
								//мышка достигла норки?
								if ((mouseX < 50) && (mouseY < 90))
								{
									break;
								}

								//мышка играет свою роль в охоте - убегает от кошки к норке
								mouse.Hunt();
								mouseX = mouse.GetX();//меняем координаты мышки
								mouseY = mouse.GetY();


								m.Show();
								c.Show();
								mouse.Show();
								b.Show();
								f.Show();

								//кошка не дошла до норки? 
								if ((catCurrX > 80) && (catCurrY > 120))
								{
									//кошка идет к своему месту с шагом, зависящим от ее сытости и игривости
									c.Hunt();
									catCurrX = c.GetX();
									catCurrY = c.GetY();

								}

								m.Show();
								c.Show();
								mouse.Show();
								b.Show();
								f.Show();
							} while (((mouseX !=50) && (mouseY != 90)));//пока мышка не около норки
						
						}
						
						Sleep(500);

						//норка занята
						if (m.is_Full() == 1)
						{
							if (c.isFed() == 1)//кот сытый
							{
								//меремещаем кота в начальное положение - есть кот не хочет, но поигрался
								c.MoveTo(catX, catY);
							}
							else
							{
								//мышка не может спрятаться от кота, ее съедают и появляется в стороне другая мышка
								//фактически, произходит перемещение мышки
								mouse.MoveTo(x0 + 540, y0 + 80);
							}

							m.Show();
							c.Show();
							mouse.Show();
							b.Show();
							f.Show();

							//кот ест(у него изменяются игривость и сытость в любом случае)
							pAnimal->Eat();
						}
						else
						{
							if (c.isFed() == 1)//кот сытый
							{
								//он не съедает мышку, потому что сытый, но станет голодным
								pAnimal->Eat();
								//игра нужна для возвращения игривости в прежнее состояние
								c.Play();
							}

							m.Show();
							c.Show();
							mouse.Show();
							b.Show();
							f.Show();
							mouse.MoveTo(x0 + 540, y0 + 80);
						}
						m.Fill();
					}

					m.Show();
					c.Show();
					mouse.Show();
					b.Show();
					f.Show();

				}//продолжаем работу программы

			}

			//скрыть все объекты
			c.Hide();
			b.Hide();
			f.Hide();
			m.Hide();
			mouse.Hide();


			PressKey(32);  //ПРОБЕЛ

			
			//===========	К О Н Е Ц   В С Т А В К И 	=======================
		}// end if
	}// end if
}//end main()



/***************************************************************/
/*          Р Е А Л И З А Ц И Я   Ф У Н К Ц И Й                */
/***************************************************************/


/*---------------------------------------------------------*/
/*  Задержка экрана до нажатия  */
/*      указанной клавиши       */
/*------------------------------*/
void PressKey(int VkCode)
{
	while (1)
		if (KEY_DOWN(VkCode))
			break;
}//PressKey()


bool Mode()//Выбор продолжения или завершения
{
	while (1)
	{
		if (KEY_DOWN(VK_RETURN))// нажали Enter - хотим продолжить
		{
			return 1;
		}

		if (KEY_DOWN(VK_ESCAPE))//нажали Escape - выходим из цикла, и позже завершаем программу
		{
			return 0;
		}
	}
}

Point* Choose(Cat* cat, Mouse* mouse, Point* p) //выбор текущего объекта для его передвижения
{
	while (1)
	{
		if (KEY_DOWN(VK_TAB))//нажали Tab
		{
			//смена объекта на другой
			if (p == cat)
			{
				return mouse;
			}
			else
			{
				return cat;
			}
			
		}
		if (KEY_DOWN(49))//нажали "1" - выбрали кошку
		{
			return cat;
		}

		if (KEY_DOWN(50))//нажали "2" - выбрали мышку
		{
			return mouse;
		}
	}
}//PressKey()

/*************  End Of Ex05_08_Con_4DynPolym.CPP File ***********/