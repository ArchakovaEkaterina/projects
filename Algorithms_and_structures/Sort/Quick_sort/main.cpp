//Сортировка быстрой перестановкой по возрастанию

#include <iostream>
#include "main.h"

using namespace std;


int main()
{
    setlocale(LC_ALL,"Rus");

    int n;//кол-во элементов матрицы


    //Выбор файла для чтения
    int mode; //номер файла для чтения
    cout << "Выберите номер файла для чтения(1-12), в котором будут:\n"
            << "1.Все отрицательные числа\n"
            << "2.Все положительные числа\n"
            << "3.Отрицательные и положительные числа\n"
            << "4.Четное кол-во чисел, причем кол-во элементов в файле больше указанного в начале файла\n"
            << "5.Нечетное кол-во чисел\n"
            << "6.Числа отсортированы в обратном порядке(по убыванию)\n"
            << "7.Малое кол-во чисел с их поитерационным выводом\n"
            << "8.Файла не существует\n"
            << "9.Файл пустой\n"
            << "10.Файл с некорректным числом элементов\n"
            << "11.Файл с недостатком элементов\n"
            << "12.Файл с некорректными значениями элементов\n";
    cout << "Ваш Выбор: ";
    while (!(cin >> mode) || (mode > 12) || (mode < 1))
    {
        cout << "Неверное значение, попробуйте еще раз: ";
        cin.clear();
        cin.ignore(INT_MAX, '\n');
    }
    cin.ignore();

    //считывание массива и его длины по номеру файла
    reading_result file_result = read_file(mode);
    if (file_result.status != 0)
        return file_result.status;

    int *mas = file_result.mas;
    n = file_result.n;


    cout<<endl<<"Исходный массив:"<< endl;
    print_arr(mas, n);

    //сортируем массив по возрастанию
    quicksort(mas, 0, n-1, n);

    //проверяем, отсортирован ли массив
    bool sorted = arr_is_sorted(mas, n);
    if (sorted == false) {
        cout << "Ошибка. Не удалось отсортировать массив\n";
        return -5;
    }

    cout<<endl<<"Отсортированный массив:"<< endl;
    print_arr(mas, n);


    delete []mas;

    return 0;
}
